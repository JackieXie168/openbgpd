From: =?UTF-8?q?J=C3=A9r=C3=A9my=20Bobbio?= <lunar@debian.org>
Date: Wed, 27 Jul 2011 19:18:17 +0200
Subject: [PATCH] Use portable printf() format strings

---
 bgpctl/bgpctl.c |   35 ++++++++++++++++++-----------------
 1 files changed, 18 insertions(+), 17 deletions(-)

diff --git a/bgpctl/bgpctl.c b/bgpctl/bgpctl.c
index c684295..765c9e6 100644
--- a/bgpctl/bgpctl.c
+++ b/bgpctl/bgpctl.c
@@ -34,6 +34,7 @@
 #include <err.h>
 #include <netdb.h>
 #include <stdio.h>
+#include <inttypes.h>
 #include <stdlib.h>
 #include <string.h>
 #include <unistd.h>
@@ -469,7 +470,7 @@ show_summary_msg(struct imsg *imsg, int nodescr)
 		    p->conf.remote_masklen, nodescr);
 		if (strlen(s) >= 20)
 			s[20] = 0;
-		printf("%-20s %8s %10llu %10llu %5u %-8s ",
+		printf("%-20s %8s %10" PRIu64 " %10" PRIu64 " %5u %-8s ",
 		    s, log_as(p->conf.remote_as),
 		    p->stats.msg_rcvd_open + p->stats.msg_rcvd_notification +
 		    p->stats.msg_rcvd_update + p->stats.msg_rcvd_keepalive +
@@ -531,8 +532,8 @@ show_neighbor_terse(struct imsg *imsg)
 	switch (imsg->hdr.type) {
 	case IMSG_CTL_SHOW_NEIGHBOR:
 		p = imsg->data;
-		printf("%llu %llu %llu %llu %llu %llu %llu "
-		    "%llu %llu %llu %u %u %llu %llu %llu %llu\n",
+		printf("%" PRIu64 " %" PRIu64 " %" PRIu64 " %" PRIu64 " %" PRIu64 " %" PRIu64 " %" PRIu64 " "
+		    "%" PRIu64 " %" PRIu64 " %" PRIu64 " %u %u %" PRIu64 " %" PRIu64 " %" PRIu64 " %" PRIu64 "\n",
 		    p->stats.msg_sent_open, p->stats.msg_rcvd_open,
 		    p->stats.msg_sent_notification,
 		    p->stats.msg_rcvd_notification,
@@ -694,17 +695,17 @@ print_neighbor_msgstats(struct peer *p)
 {
 	printf("  Message statistics:\n");
 	printf("  %-15s %-10s %-10s\n", "", "Sent", "Received");
-	printf("  %-15s %10llu %10llu\n", "Opens",
+	printf("  %-15s %10" PRIu64 " %10" PRIu64 "\n", "Opens",
 	    p->stats.msg_sent_open, p->stats.msg_rcvd_open);
-	printf("  %-15s %10llu %10llu\n", "Notifications",
+	printf("  %-15s %10" PRIu64 " %10" PRIu64 "\n", "Notifications",
 	    p->stats.msg_sent_notification, p->stats.msg_rcvd_notification);
-	printf("  %-15s %10llu %10llu\n", "Updates",
+	printf("  %-15s %10" PRIu64 " %10" PRIu64 "\n", "Updates",
 	    p->stats.msg_sent_update, p->stats.msg_rcvd_update);
-	printf("  %-15s %10llu %10llu\n", "Keepalives",
+	printf("  %-15s %10" PRIu64 " %10" PRIu64 "\n", "Keepalives",
 	    p->stats.msg_sent_keepalive, p->stats.msg_rcvd_keepalive);
-	printf("  %-15s %10llu %10llu\n", "Route Refresh",
+	printf("  %-15s %10" PRIu64 " %10" PRIu64 "\n", "Route Refresh",
 	    p->stats.msg_sent_rrefresh, p->stats.msg_rcvd_rrefresh);
-	printf("  %-15s %10llu %10llu\n\n", "Total",
+	printf("  %-15s %10" PRIu64 " %10" PRIu64 "\n\n", "Total",
 	    p->stats.msg_sent_open + p->stats.msg_sent_notification +
 	    p->stats.msg_sent_update + p->stats.msg_sent_keepalive +
 	    p->stats.msg_sent_rrefresh,
@@ -713,9 +714,9 @@ print_neighbor_msgstats(struct peer *p)
 	    p->stats.msg_rcvd_rrefresh);
 	printf("  Update statistics:\n");
 	printf("  %-15s %-10s %-10s\n", "", "Sent", "Received");
-	printf("  %-15s %10llu %10llu\n", "Updates",
+	printf("  %-15s %10" PRIu64 " %10" PRIu64 "\n", "Updates",
 	    p->stats.prefix_sent_update, p->stats.prefix_rcvd_update);
-	printf("  %-15s %10llu %10llu\n", "Withdraws",
+	printf("  %-15s %10" PRIu64 " %10" PRIu64 "\n", "Withdraws",
 	    p->stats.prefix_sent_withdraw, p->stats.prefix_rcvd_withdraw);
 }
 
@@ -1021,16 +1022,16 @@ get_baudrate(u_int64_t baudrate, char *unit)
 	static char bbuf[16];
 
 	if (baudrate > IF_Gbps(1))
-		snprintf(bbuf, sizeof(bbuf), "%llu G%s",
+		snprintf(bbuf, sizeof(bbuf), "%" PRIu64 " G%s",
 		    baudrate / IF_Gbps(1), unit);
 	else if (baudrate > IF_Mbps(1))
-		snprintf(bbuf, sizeof(bbuf), "%llu M%s",
+		snprintf(bbuf, sizeof(bbuf), "%" PRIu64 " M%s",
 		    baudrate / IF_Mbps(1), unit);
 	else if (baudrate > IF_Kbps(1))
-		snprintf(bbuf, sizeof(bbuf), "%llu K%s",
+		snprintf(bbuf, sizeof(bbuf), "%" PRIu64 " K%s",
 		    baudrate / IF_Kbps(1), unit);
 	else
-		snprintf(bbuf, sizeof(bbuf), "%llu %s",
+		snprintf(bbuf, sizeof(bbuf), "%" PRIu64 " %s",
 		    baudrate, unit);
 
 	return (bbuf);
@@ -1432,11 +1433,11 @@ show_ext_community(u_char *data, u_int16_t len)
 		case EXT_COMMUNITY_OPAQUE:
 			memcpy(&ext, data + i, sizeof(ext));
 			ext = betoh64(ext) & 0xffffffffffffLL;
-			printf("%s 0x%llx", log_ext_subtype(subtype), ext);
+			printf("%s 0x%" PRIx64 "", log_ext_subtype(subtype), ext);
 			break;
 		default:
 			memcpy(&ext, data + i, sizeof(ext));
-			printf("0x%llx", betoh64(ext));
+			printf("0x%" PRIx64 "", betoh64(ext));
 		}
 		if (i + 8 < len)
 			printf(", ");
-- 
